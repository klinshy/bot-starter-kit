(function(r,s){typeof exports=="object"&&typeof module<"u"?module.exports=s():typeof define=="function"&&define.amd?define(s):(r=typeof globalThis<"u"?globalThis:r||self,r.MyBot=s())})(this,function(){"use strict";return{run:async s=>{const c={};let i;async function d(e,t){try{console.log(`Creating thread for bot: ${e}, user: ${t}`);const o=await fetch(`https://ai.newit.works/api/v1/workspace/${e}/thread/new`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer JM2QWSW-FVYM0C0-KBR1MG5-PE3WSKK","Accept-Encoding":"gzip, deflate, br",Accept:"*/*"},body:JSON.stringify({userId:6})});if(!o.ok)throw new Error(`Failed to create thread: ${o.statusText}`);const a=(await o.json()).thread.slug;return c[t]=a,console.log(`Thread created with ID: ${a} for user ${t}`),a}catch(o){throw console.error("Failed to create thread:",o),o}}async function h(e,t,o){try{console.log(`Handling chat message for bot: ${e}, thread: ${t}, message: ${o}`),WA.chat.startTyping({scope:"bubble"});const n=await fetch(`https://ai.newit.works/api/v1/workspace/kos/thread/${t}/chat`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:"Bearer JM2QWSW-FVYM0C0-KBR1MG5-PE3WSKK","Accept-Encoding":"gzip, deflate, br",Accept:"*/*"},body:JSON.stringify({message:"test",mode:"chat",userId:6})}).then(l=>l.json()),a=n.textResponse;if(!a)throw new Error("Custom AI returned no text response: "+JSON.stringify(n));console.log("Custom AI text response:",a),WA.chat.sendChatMessage(a,{scope:"bubble"}),WA.chat.stopTyping({scope:"bubble"})}catch(n){console.error("Failed to handle chat message:",n)}}WA.onInit().then(async()=>{console.log("COUCOU",s),i=await WA.player.name,WA.player.proximityMeeting.onParticipantJoin().subscribe(async e=>{console.log(`User ${e.name} with UUID ${e.uuid} joined the proximity meeting.`);let t=c[e.uuid];t?console.log(`Found existing thread ${t} for user ${e.uuid}.`):(console.log(`No existing thread for user ${e.uuid}, creating new thread.`),t=await d(i,e.uuid)),WA.chat.onChatMessage(async(o,n)=>{if(!n.author){console.log("Received message with no author, ignoring.");return}console.log(`Received message from ${n.author.name}: ${o}`),await h(i,t,o)},{scope:"bubble"})})})}}});
